Drop DataBAse DarNA

Create Database DarNA

use DarNA
-- Users Table
CREATE TABLE Users (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    FullName NVARCHAR(100),
    Email NVARCHAR(100) UNIQUE NOT NULL,
    Password NVARCHAR(255),
    PhoneNumber NVARCHAR(15),
    Role NVARCHAR(20) CHECK (Role IN ('User', 'Admin')) DEFAULT 'User'
);

-- Houses Table
CREATE TABLE Houses (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(100),
    Description NVARCHAR(500),
    LocationName NVARCHAR(100),
    TypeName NVARCHAR(50) ,
    Price DECIMAL(10,2) ,
    Available BIT ,
    MaxGuests INT ,
    ImageURL NVARCHAR(255),
    AvailableFrom DATE,
    AvailableTo DATE,
    Stars INT CHECK (Stars BETWEEN 1 AND 5),
    Rate DECIMAL(5,2) CHECK (Rate BETWEEN 0 AND 10)
);
drop table Houses
drop table Wishlist


-- Bookings Table (For Houses)
CREATE TABLE HouseBookings (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    HouseID INT FOREIGN KEY REFERENCES Houses(ID) ON DELETE CASCADE,
    CheckInDate DATE ,
    CheckOutDate DATE ,
    Guests INT ,
    Status NVARCHAR(20) CHECK (Status IN ('Pending', 'Confirmed', 'Cancelled')) DEFAULT 'Pending',
    BookingDate DATETIME DEFAULT GETDATE()
);

-- Wishlist Table
CREATE TABLE Wishlist (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    HouseID INT FOREIGN KEY REFERENCES Houses(ID) ON DELETE CASCADE
);

-- Feedback Table (For Houses & Tours)
CREATE TABLE Feedback (
   ID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    HouseID INT  FOREIGN KEY REFERENCES Houses(ID) ON DELETE CASCADE,
    TourID INT  FOREIGN KEY REFERENCES Tours(ID) ON DELETE CASCADE,
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comment NVARCHAR(500),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- Payments Table (For Both House & Tour Bookings)
CREATE TABLE Payments (
   ID INT IDENTITY(1,1) PRIMARY KEY,
    BookingID INT  FOREIGN KEY REFERENCES HouseBookings(ID) ,
    TourBookingID INT  FOREIGN KEY REFERENCES TourBookings(ID) ,
    UserID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    Amount DECIMAL(10,2) ,
    PaymentMethod NVARCHAR(50)  CHECK (PaymentMethod IN ('Credit Card', 'PayPal', 'Visa')),
    Status NVARCHAR(20) CHECK (Status IN ('Pending', 'Completed', 'Failed')) DEFAULT 'Pending',
    PaymentDate DATETIME DEFAULT GETDATE()
);

-- Tours Table
CREATE TABLE Tours (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    LocationName NVARCHAR(100) ,
    Name NVARCHAR(100) ,
    Description NVARCHAR(500),
    Duration NVARCHAR(50),
    Price DECIMAL(10,2) ,
    MaxGuests INT ,
    StartDate DATE ,
    StartTime TIME ,
    EndDate DATE ,
    EndTime TIME ,
    ImageURL NVARCHAR(255),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- TourBookings Table (For Tours)
CREATE TABLE TourBookings (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    TourID INT FOREIGN KEY REFERENCES Tours(ID) ON DELETE CASCADE,
    BookingDate DATETIME DEFAULT GETDATE(),
    Status NVARCHAR(20) CHECK (Status IN ('Pending', 'Confirmed', 'Cancelled')) DEFAULT 'Pending'
);

-- Blogs Table
CREATE TABLE Blogs (
    BlogID INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(200) NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    AuthorID INT FOREIGN KEY REFERENCES Users(ID) ON DELETE CASCADE,
    CreatedAt DATETIME DEFAULT GETDATE()
);
-- Contact Us Table (For guests sending inquiries)
CREATE TABLE ContactUs (
    ContactID INT IDENTITY(1,1) PRIMARY KEY,
    FullName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100) NOT NULL,
    Subject NVARCHAR(200) NOT NULL,
    Message NVARCHAR(1000) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE()
);
